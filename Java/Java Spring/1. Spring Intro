Spring Intro
---------------
The Spring Framework is an application framework and inversion of control container for the Java platform. 
The framework's core features can be used by any Java application, but there are extensions for building web applications on top of the Java EE platform.

Unline principles of Spring
---------------------------
	- RTP - Runtime polymorphism & HAS-A relationship
	- using these 2 principles complete spring has been implemented
	Developers need to follow HAS-A relationship over inheritence. Using runtime polymorphism we can pass required dependencies into POJOs

IOC - Inversion of Control 		:: Loose Coupling b/w classes ::
DI  - Dependancy injection 		:: How a class gets hold of its dependencies. Constructor DI (for required dependencies) or Setter DI(for optional dependencies) ::
AOP - Aspect oriented programming 	:: takes care of cross cutting concerns such as logging, security, declarative txn etc ::

IOC - HAS-A relationship inputs are declared in <bean>.xml file and injected by IOC container to POJO classes. Use runtime polymorphism
Made possible bcz of containers

What does a container does? Role of container? eg. Tomcat container
----------------------------------------------
1. read from configuration file <web>.xml 
2. create instance of xml declarations 		:: AOP
	- if it finds loadOnStartupServlet, it will create that object/beans
3. create dynamic params to supply to bean classes : servlet context obj and servlet config objects
	- read init params and config params 	:: Dependancy injection -> main asset of IOC 
4. manage lifecycles of bean classes : create, init & destroy

IOC Containers
--------------
	- Core container -> BeanFactory(I) 			-> XMLBeanFactory(C)
	- J2EE container -> ApplicationContext(I) 	-> ConfigurableApplicationContext(I) -> ClasspathXMLApplicationContext(C)
	Spring MVC, prepared on top of IOC container, has a web container
	- Web container	-> WebApplicationContext(I)	-> WebApplicationContextUtil :: Factory class like DriverManager in JDBC

How to start container OR create objects in Spring ?
----------------------------------------------------
	We need to write Driver code for starting/creating container object. we write the code in init() method
	- new XMLBeanFactory()
	- new ClasspathApplicationContext
	- WebApplicationContextUtils.getObj(...)


Recommended IDEs for Spring Applications
----------------------------------------
	1. Eclipse (while creating xml files we need to add xsd/dtd from spring-beans.jar(org.springframework.core.factory.xml spring-beans-2.0.dtd line no 37-38), STS does this by default)
	2. Spring Tool Suite ( STS )
	3. My Eclipse
	4. NetBeans
	5. IBMs RAD
	6. jBuilder
