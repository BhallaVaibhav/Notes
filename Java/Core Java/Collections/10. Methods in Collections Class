Methods in Collections Class
----------------------------

	Collections class defines several utility methods for collection objects like sorting searching reversing etc
	
	Sorting Elements for list
	-------------------------
		public static void sort (List l) 	// Elements in the list would be sorted in natural sorting order. 
											// Elements should be homogenous & Comparable. Null element not allowed
		public static void sort (List l, Comparator c) // customized sorting
		
	Searching Elements in List
	--------------------------
		public static int binarySearch(List l, Object target); 
		public static int binarySearch(List l, Object target, Comparator c)
		
		Conclusions
			1. The above search methods internally use binarySearch algorithm
			2. list should be sorted. otherwise we will get unpredictable results
			3. Successful search returns index. 
			4. unSuccessful search returns insertionPoint. Its the location where we can place the target element in the sorted list
		
		Search Range, for a list of 3 elements:
		-1	-2	-3	-4
		A	K	Z
		0	1	2
		
		Successful result range 	: 0 to 2
		UnSuccessful result range	: -4 to -1
		Total result range			: -4 to 2

		To generalize, For list of 'n' elements
			1. Successful Search result range 	: 0 to n-1
			2. unSuccessful Search Result Range	:	-(n+1) to -1
			3. Total Result range				:	-(n+1) to (n-1)
		
	Reversing elements of List
	--------------------------
		public static void reverse(List l);
		public static Comparator reverseOrder(Comparator c); // reverses the order of Comparator logic
			Comparator c1 = Collections.reverseOrder(Comparator c);// c-> Ascending order	c1 -> Descending order
